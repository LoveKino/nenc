module.exports = "#ifndef NENC_LIBRARY_SYSTEM_C\n#define NENC_LIBRARY_SYSTEM_C\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include \"system.h\"\n\n/**************************************************************\n * provide basic c functions support for pfc middle code\n **************************************************************/\n\n/**************************************************************\n * basic host language interfaces\n **************************************************************/\n\n/**************************************************************\n * main interfaces\n **************************************************************/\nstatic void *sys_runProgram (void *program) {\n    return NULL;\n}\n\nstatic void* sys_void () {\n    return NULL;\n}\n\nstatic void* sys_pair (void* v1, void* v2) {\n    return NULL;\n}\n\nstatic void* sys_variable (char* variableName) {\n    return NULL;\n}\n\nstatic void* sys_abstraction (void* params, void* body) {\n    return NULL;\n}\n\nstatic void* sys_application (void* caller, void* rest) {\n    return NULL;\n}\n\n/**\n * basic data\n */\nstatic void* sys_data (void *data) {\n    return NULL;\n}\n\nstatic void* sys_object (void* obj) {\n    return NULL;\n}\n\nstatic void* sys_array (void* arr) {\n    return NULL;\n}\n\nconst struct nencSystemLibrary NencSystemLibrary = {\n    .sys_runProgram = sys_runProgram,\n\n    .sys_void = sys_void,\n    .sys_pair = sys_pair,\n\n    .sys_variable = sys_variable,\n    .sys_abstraction = sys_abstraction,\n    .sys_application = sys_application,\n\n    .sys_data = sys_data,\n    .sys_object = sys_object,\n    .sys_array = sys_array\n};\n\n#endif\n"