package com.nenc.auto.test;
import java.util.HashMap;
import com.nenc.interpreter.*;

public class Test {
    public Object run() {
        Interpreter interpreter = new Interpreter();

        {HashMap<String, Object> t0 = new HashMap<String, Object>();
Object[] t1 = new Object[1];
t0.put("params", t1);
HashMap<String, Object> t2 = new HashMap<String, Object>();
t1[0] = t2;
Object[] t3 = new Object[1];
t2.put("value", t3);
HashMap<String, Object> t4 = new HashMap<String, Object>();
t3[0] = t4;
Object[] t5 = new Object[1];
t4.put("params", t5);
HashMap<String, Object> t6 = new HashMap<String, Object>();
t5[0] = t6;
Object[] t7 = new Object[2];
t6.put("value", t7);
HashMap<String, Object> t8 = new HashMap<String, Object>();
t7[1] = t8;
Object[] t9 = new Object[1];
t8.put("params", t9);
HashMap<String, Object> t10 = new HashMap<String, Object>();
t9[0] = t10;
Object[] t11 = new Object[1];
t10.put("value", t11);
HashMap<String, Object> t12 = new HashMap<String, Object>();
t11[0] = t12;
Object[] t13 = new Object[1];
t12.put("params", t13);
HashMap<String, Object> t14 = new HashMap<String, Object>();
t13[0] = t14;
Object[] t15 = new Object[2];
t14.put("value", t15);
HashMap<String, Object> t16 = new HashMap<String, Object>();
t15[1] = t16;
Object[] t17 = new Object[1];
t16.put("params", t17);
HashMap<String, Object> t18 = new HashMap<String, Object>();
t17[0] = t18;
Object[] t19 = new Object[1];
t18.put("value", t19);
HashMap<String, Object> t20 = new HashMap<String, Object>();
t19[0] = t20;
Object[] t21 = new Object[1];
t20.put("params", t21);
HashMap<String, Object> t22 = new HashMap<String, Object>();
t21[0] = t22;
Object[] t23 = new Object[2];
t22.put("value", t23);
HashMap<String, Object> t24 = new HashMap<String, Object>();
t23[1] = t24;
Object[] t25 = new Object[1];
t24.put("params", t25);
HashMap<String, Object> t26 = new HashMap<String, Object>();
t25[0] = t26;
Object[] t27 = new Object[1];
t26.put("value", t27);
HashMap<String, Object> t28 = new HashMap<String, Object>();
t27[0] = t28;
Object[] t29 = new Object[3];
t28.put("value", t29);
HashMap<String, Object> t30 = new HashMap<String, Object>();
t29[2] = t30;
Object[] t31 = new Object[1];
t30.put("params", t31);
HashMap<String, Object> t32 = new HashMap<String, Object>();
t31[0] = t32;
Object[] t33 = new Object[1];
t32.put("value", t33);
HashMap<String, Object> t34 = new HashMap<String, Object>();
t33[0] = t34;
Object[] t35 = new Object[1];
t34.put("params", t35);
HashMap<String, Object> t36 = new HashMap<String, Object>();
t35[0] = t36;
String t37 = "3";
t36.put("value", t37);
String t38 = "raw";
t36.put("type", t38);
HashMap<String, Object> t39 = new HashMap<String, Object>();
t34.put("fun", t39);
String t40 = "std::number";
t39.put("variableName", t40);
String t41 = "variable";
t39.put("type", t41);
String t42 = "application";
t34.put("type", t42);
String t43 = "array";
t32.put("type", t43);
HashMap<String, Object> t44 = new HashMap<String, Object>();
t30.put("fun", t44);
String t45 = "std::statements";
t44.put("variableName", t45);
String t46 = "variable";
t44.put("type", t46);
String t47 = "application";
t30.put("type", t47);
HashMap<String, Object> t48 = new HashMap<String, Object>();
t29[1] = t48;
Object[] t49 = new Object[1];
t48.put("params", t49);
HashMap<String, Object> t50 = new HashMap<String, Object>();
t49[0] = t50;
Object[] t51 = new Object[1];
t50.put("value", t51);
HashMap<String, Object> t52 = new HashMap<String, Object>();
t51[0] = t52;
Object[] t53 = new Object[1];
t52.put("params", t53);
HashMap<String, Object> t54 = new HashMap<String, Object>();
t53[0] = t54;
String t55 = "2";
t54.put("value", t55);
String t56 = "raw";
t54.put("type", t56);
HashMap<String, Object> t57 = new HashMap<String, Object>();
t52.put("fun", t57);
String t58 = "std::number";
t57.put("variableName", t58);
String t59 = "variable";
t57.put("type", t59);
String t60 = "application";
t52.put("type", t60);
String t61 = "array";
t50.put("type", t61);
HashMap<String, Object> t62 = new HashMap<String, Object>();
t48.put("fun", t62);
String t63 = "std::statements";
t62.put("variableName", t63);
String t64 = "variable";
t62.put("type", t64);
String t65 = "application";
t48.put("type", t65);
HashMap<String, Object> t66 = new HashMap<String, Object>();
t29[0] = t66;
Object[] t67 = new Object[1];
t66.put("params", t67);
HashMap<String, Object> t68 = new HashMap<String, Object>();
t67[0] = t68;
Object[] t69 = new Object[1];
t68.put("value", t69);
HashMap<String, Object> t70 = new HashMap<String, Object>();
t69[0] = t70;
Object[] t71 = new Object[1];
t70.put("params", t71);
HashMap<String, Object> t72 = new HashMap<String, Object>();
t71[0] = t72;
String t73 = "1";
t72.put("value", t73);
String t74 = "raw";
t72.put("type", t74);
HashMap<String, Object> t75 = new HashMap<String, Object>();
t70.put("fun", t75);
String t76 = "std::number";
t75.put("variableName", t76);
String t77 = "variable";
t75.put("type", t77);
String t78 = "application";
t70.put("type", t78);
String t79 = "array";
t68.put("type", t79);
HashMap<String, Object> t80 = new HashMap<String, Object>();
t66.put("fun", t80);
String t81 = "std::statements";
t80.put("variableName", t81);
String t82 = "variable";
t80.put("type", t82);
String t83 = "application";
t66.put("type", t83);
String t84 = "array";
t28.put("type", t84);
String t85 = "array";
t26.put("type", t85);
HashMap<String, Object> t86 = new HashMap<String, Object>();
t24.put("fun", t86);
String t87 = "std::statements";
t86.put("variableName", t87);
String t88 = "variable";
t86.put("type", t88);
String t89 = "application";
t24.put("type", t89);
HashMap<String, Object> t90 = new HashMap<String, Object>();
t23[0] = t90;
Object[] t91 = new Object[1];
t90.put("params", t91);
HashMap<String, Object> t92 = new HashMap<String, Object>();
t91[0] = t92;
String t93 = "c";
t92.put("value", t93);
String t94 = "raw";
t92.put("type", t94);
HashMap<String, Object> t95 = new HashMap<String, Object>();
t90.put("fun", t95);
String t96 = "std::string";
t95.put("variableName", t96);
String t97 = "variable";
t95.put("type", t97);
String t98 = "application";
t90.put("type", t98);
String t99 = "array";
t22.put("type", t99);
HashMap<String, Object> t100 = new HashMap<String, Object>();
t20.put("fun", t100);
String t101 = "std::object";
t100.put("variableName", t101);
String t102 = "variable";
t100.put("type", t102);
String t103 = "application";
t20.put("type", t103);
String t104 = "array";
t18.put("type", t104);
HashMap<String, Object> t105 = new HashMap<String, Object>();
t16.put("fun", t105);
String t106 = "std::statements";
t105.put("variableName", t106);
String t107 = "variable";
t105.put("type", t107);
String t108 = "application";
t16.put("type", t108);
HashMap<String, Object> t109 = new HashMap<String, Object>();
t15[0] = t109;
Object[] t110 = new Object[1];
t109.put("params", t110);
HashMap<String, Object> t111 = new HashMap<String, Object>();
t110[0] = t111;
String t112 = "b";
t111.put("value", t112);
String t113 = "raw";
t111.put("type", t113);
HashMap<String, Object> t114 = new HashMap<String, Object>();
t109.put("fun", t114);
String t115 = "std::string";
t114.put("variableName", t115);
String t116 = "variable";
t114.put("type", t116);
String t117 = "application";
t109.put("type", t117);
String t118 = "array";
t14.put("type", t118);
HashMap<String, Object> t119 = new HashMap<String, Object>();
t12.put("fun", t119);
String t120 = "std::object";
t119.put("variableName", t120);
String t121 = "variable";
t119.put("type", t121);
String t122 = "application";
t12.put("type", t122);
String t123 = "array";
t10.put("type", t123);
HashMap<String, Object> t124 = new HashMap<String, Object>();
t8.put("fun", t124);
String t125 = "std::statements";
t124.put("variableName", t125);
String t126 = "variable";
t124.put("type", t126);
String t127 = "application";
t8.put("type", t127);
HashMap<String, Object> t128 = new HashMap<String, Object>();
t7[0] = t128;
Object[] t129 = new Object[1];
t128.put("params", t129);
HashMap<String, Object> t130 = new HashMap<String, Object>();
t129[0] = t130;
String t131 = "a";
t130.put("value", t131);
String t132 = "raw";
t130.put("type", t132);
HashMap<String, Object> t133 = new HashMap<String, Object>();
t128.put("fun", t133);
String t134 = "std::string";
t133.put("variableName", t134);
String t135 = "variable";
t133.put("type", t135);
String t136 = "application";
t128.put("type", t136);
String t137 = "array";
t6.put("type", t137);
HashMap<String, Object> t138 = new HashMap<String, Object>();
t4.put("fun", t138);
String t139 = "std::object";
t138.put("variableName", t139);
String t140 = "variable";
t138.put("type", t140);
String t141 = "application";
t4.put("type", t141);
String t142 = "array";
t2.put("type", t142);
HashMap<String, Object> t143 = new HashMap<String, Object>();
t0.put("fun", t143);
String t144 = "std::statements";
t143.put("variableName", t144);
String t145 = "variable";
t143.put("type", t145);
String t146 = "application";
t0.put("type", t146);interpreter.defineModule("/Users/yuer/workspaceforme/work/basis/language/nenc/repl", t0);}

        return interpreter.runProgram("/Users/yuer/workspaceforme/work/basis/language/nenc/repl");
    }
}
