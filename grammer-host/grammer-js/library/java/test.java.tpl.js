module.exports = "package {:packageName:};\nimport java.util.HashMap;\n// import interpreter library\nimport com.nenc.interpreter.*;\n\npublic class {:className:} {\n    public static void main(String[] argv) throws Exception {\n        Sys_ModuleFactory moduleFactory = new Sys_ModuleFactory();\n\n        // code from nenc compiling\n        {: join(concatModuleSources(moduleSources, \"moduleFactory.defineModule(${{encodeString(filePath)}}, ${{code}});\"), \"\\n\") :}\n\n        Object result = moduleFactory.importModule(\"{: indexPath :}\");\n\n        // compare result and expectation\n        assertJsonEqual(result, {: expect :});\n    }\n\n    public static HashMap<String, Object> listToObject(Object[] list) {\n        HashMap<String, Object> result = new HashMap<String, Object> ();\n        int i = 0;\n        while(i < list.length - 1) {\n            String key = (String)list[i];\n            i++;\n            Object value = list[i];\n            result.put(key, value);\n        }\n        return result;\n    }\n\n    public static void assertJsonEqual(Object real, Object expect) throws Exception {\n        if(real == null) {\n            if(expect != null) {\n                throw new Exception(notEqualString(real, expect));\n            }\n        }\n        else if(real instanceof Double) {\n            if(!(expect instanceof Double)) {\n                throw new Exception(notEqualString(real, expect));\n            }\n            if(!expect.equals(real)) {\n                throw new Exception(notEqualString(real, expect));\n            }\n        } else if(real instanceof String) {\n            if(!(expect instanceof String)) {\n                throw new Exception(notEqualString(real, expect));\n            }\n            if(!expect.equals(real)) {\n                throw new Exception(notEqualString(real, expect));\n            }\n        } else if(real instanceof Object[]) {\n            if(!(expect instanceof Object[])) {\n                throw new Exception(notEqualString(real, expect));\n            }\n            Object[] realArr = (Object[]) real;\n            Object[] expectArr = (Object[]) expect;\n            //\n            if(realArr.length != expectArr.length) {\n                throw new Exception(notEqualString(realArr, expectArr));\n            } else {\n                for(int i = 0; i < realArr.length; i++) {\n                    assertJsonEqual(realArr[i], expectArr[i]);\n                }\n            }\n        } else if(real instanceof HashMap) {\n            if(!(expect instanceof HashMap)) {\n                throw new Exception(notEqualString(real, expect));\n            }\n            // TODO\n        }\n    }\n\n    private static String notEqualString(Object real, Object expect) {\n        return \"real is not equal to expect. real is \" + real + \", expect is \" + expect;\n    }\n}\n"